version: '3'

services:
  redis:
    restart: unless-stopped
    image: redis:latest
    volumes:
      - redis_data:/data
    expose:
      - "6379"

  dramatiq_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.worker
    environment:
      REDIS_URL: redis
      WATCHER_PATH: /work
      dramatiq_prom_host: dramatiq_worker
      dramatiq_prom_port: 9191
    depends_on:
      - redis
      - dramatiq_web
    volumes:
      - /tmp:/work
    entrypoint: ./start-workers.sh
    expose:
      - "9191"

  dramatiq_web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.web
    environment:
      REDIS_URL: redis
      WATCHER_PATH: /work
      DASHBOARD_PREFIX: /esperanto/dashboard  # PREFIX URL FOR DASHBOARD
    depends_on:
      - redis
    volumes:
      - /tmp:/work
    entrypoint: ./start-web.sh
    expose: 
      - "5000"
#    ports:
#      - "5000:5000"

  prometheus:
    restart: unless-stopped
    image: prom/prometheus:latest
    depends_on:
      - nginx
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention=200h
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --web.external-url=http://localhost:8080/esperanto/prometheus # EXTERNAL URL TO REACH PROMETHEUS
    expose:
      - "9090"
#    ports:
#      - "9090:9090"

  grafana:
    user: root   # UNABLE TO ADD DASHBOARD WITHOUT SETTING THIS.
    restart: unless-stopped
    image: grafana/grafana:latest-ubuntu
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.nginx
    ports:
      - "8080:80"

volumes:
  redis_data:         # FLUSHDB to clear redis
  prometheus_data:
  grafana_data:
